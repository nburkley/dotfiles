#-----------------------------------------------------------------------------
# Set defaults
#-----------------------------------------------------------------------------

# use Ctrl+a as prefix, but send it through when pressed twice
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# allow mouse
set -g mouse on

# allow neovim to change cursor shape
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# set iterm2 tab tile
set-option -g set-titles on

# use vi keys
set-option -g mode-keys vi

# start window and pane numbers at 1
set -g base-index 1
# set-option -w -g pane-base-index

# re-number windows sequentially after closing any of them
set -g renumber-windows on

#-----------------------------------------------------------------------------
# Custom Bindings
#-----------------------------------------------------------------------------

# reload tmux configs
unbind r
bind r source-file ~/.tmux.conf \; display "tmux config reloaded!"

# duplicate input to all panes in the same window
bind S set-window-option synchronize-panes on
bind s set-window-option synchronize-panes off

# search up/backwards through history with /
unbind /
bind / copy-mode \; send-key ?

#-----------------------------------------------------------------------------
# Copy + Paste
#-----------------------------------------------------------------------------

# Enter copy mode with Esc
bind Escape copy-mode

# bind-key -Tcopy-mode-vi 'v' send -X begin-selection
# bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# bind-key -Tcopy-mode-vi Escape send -X cancel
# bind-key -Tcopy-mode-vi V send -X rectangle-toggle

bind Enter copy-mode # enter copy mode
bind b list-buffers  # list paster buffers
bind p paste-buffer  # paste from the top pate buffer
bind P choose-buffer # choose which buffer to paste from

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 3> /dev/null || true'

# copy to Mac OSX pasteboard
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"'

#-----------------------------------------------------------------------------
# Status Bar
#-----------------------------------------------------------------------------

# set the default status foreground/background colors
set -g status-style fg=white
set -g status-style bg=black

# Set Command / message line coors
set -g message-command fg=white
set -g message-command bg=black

# Refresh status line every 5 seconds
set -g status-interval 5
# center the status line
set -g status-justify centre

# length of tmux status line
set -g status-left-length 30
set -g status-right-length 150

#D ()
#F ()
#H (hostname)
#I (window index)
#P()
#S (session index)
#T (pane title)
#W (currnet task like vim if editing a file in vim or zsh if running zsh)

#Set the left and right status
set -g status-left '#[bg=colour241]#[fg=colour15]#{?client_prefix,#[bg=colour2],} ‚ùê #S #[bg=colour236]#[fg=colour241]#{?client_prefix,#[fg=colour2],}ÓÇ∞#{?window_zoomed_flag, üîç ,}#[bg=colour236]#[fg=colour70]  üîã #(~/.dotfiles/tmux_scripts/battery.sh) % #[bg=colour0]#[fg=colour236]ÓÇ∞'
set -g status-right '#[fg=colour20]ÓÇ≤#[bg=colour20]#(~/.tmux/plugins/kube-tmux/kube.tmux 22 white)#[bg=colour20]#[fg=colour110]#[fg=colour179]#[fg=colour1] #[fg=colour29]ÓÇ≤#[bg=colour29]#[fg=colour0] #(~/.dotfiles/tmux_scripts/music.sh) #[bg=colour29]#[fg=colour110]ÓÇ≤#[bg=colour110]#[fg=colour0] %b %d %H:%M '

# customize how windows are displayed in the status line
set -g window-status-current-format "#[fg=colour232]#[bg=colour123]ÓÇ∞#[fg=colour232]#[bg=colour123] #I* #[fg=colour232] #W #[fg=colour123]#[bg=colour232]ÓÇ∞"
set -g window-status-format "#[bg=colour236]#[fg=colour0]ÓÇ∞#[fg=colour7]#[bg=colour236] #I - #W #[bg=colour0]#[fg=colour236]ÓÇ∞"

#-----------------------------------------------------------------------------
# Pane colours
#-----------------------------------------------------------------------------
# set inactive/active window styles
set -g window-style 'fg=colour247,bg=colour235'
set -g window-active-style 'fg=colour250,bg=black'

#pane border
set -g pane-border-style bg=colour235
set -g pane-border-style fg=colour239
set -g pane-active-border-style bg=colour236
set -g pane-active-border-style fg=colour51

#-----------------------------------------------------------------------------

# -- edit mode (tmux < 2.4) ----------------------------------------------------

# vi-edit is gone in tmux >= 2.4
run -b 'tmux bind -ct vi-edit H start-of-line 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit L end-of-line 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit q cancel 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit Escape cancel 2> /dev/null || true'


is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

#-----------------------------------------------------------------------------
# Tmux Plugins
#-----------------------------------------------------------------------------

# use tmux plug-in manager
set -g @plugin 'tmux-plugins/tpm'

# set some good tmux defaults
set -g @plugin 'tmux-plugins/tmux-sensible'

# vim style navigation and easier split handling
set -g @plugin 'tmux-plugins/tmux-pain-control'

set -g @plugin 'fcsonline/tmux-thumbs'

# use fzf to select content from the history
# set -g @plugin 'laktak/extrakto'

# use kube-tmux to show current k8s context
set -g @plugin 'jonmosco/kube-tmux'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
